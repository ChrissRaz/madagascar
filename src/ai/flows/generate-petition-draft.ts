'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating a draft petition title and description based on a user-provided issue description.
 *
 * - generatePetitionDraft - An async function that takes a short issue description and returns a draft petition title and description.
 * - GeneratePetitionDraftInput - The input type for the generatePetitionDraft function.
 * - GeneratePetitionDraftOutput - The return type for the generatePetitionDraft function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePetitionDraftInputSchema = z.object({
  issueDescription: z
    .string()
    .describe('A short description of the issue the user wants to petition.'),
});
export type GeneratePetitionDraftInput = z.infer<typeof GeneratePetitionDraftInputSchema>;

const GeneratePetitionDraftOutputSchema = z.object({
  petitionTitle: z
    .string()
    .describe('A draft title for the petition, generated by the AI.'),
  petitionDescription: z
    .string()
    .describe(
      'A draft description for the petition, generated by the AI, expanding on the issue description.'
    ),
});
export type GeneratePetitionDraftOutput = z.infer<typeof GeneratePetitionDraftOutputSchema>;

export async function generatePetitionDraft(
  input: GeneratePetitionDraftInput
): Promise<GeneratePetitionDraftOutput> {
  return generatePetitionDraftFlow(input);
}

const generatePetitionDraftPrompt = ai.definePrompt({
  name: 'generatePetitionDraftPrompt',
  input: {schema: GeneratePetitionDraftInputSchema},
  output: {schema: GeneratePetitionDraftOutputSchema},
  prompt: `You are an AI assistant specialized in drafting petitions.
  Based on the provided issue description, generate a concise and engaging petition title and a more detailed description.
  The title should be attention-grabbing and clearly state the purpose of the petition.
  The description should expand on the issue, providing context and reasons why action is needed.

  Issue Description: {{{issueDescription}}}

  Here is the draft title and description:
  Title:
  {{output.petitionTitle}}
  Description:
  {{output.petitionDescription}}`,
});

const generatePetitionDraftFlow = ai.defineFlow(
  {
    name: 'generatePetitionDraftFlow',
    inputSchema: GeneratePetitionDraftInputSchema,
    outputSchema: GeneratePetitionDraftOutputSchema,
  },
  async input => {
    const {output} = await generatePetitionDraftPrompt(input);
    return output!;
  }
);
